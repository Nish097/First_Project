<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="12/9/2024 2:36:06 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="DESKTOP-263B43H"
  DTS:CreatorName="DESKTOP-263B43H\Nishi Sen"
  DTS:DTSID="{4BAC8CD0-4536-497C-BCB8-0718756CC189}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="16.0.5685.0"
  DTS:LocaleID="1033"
  DTS:ObjectName="pkg_foreachLoop"
  DTS:PackageType="5"
  DTS:VersionBuild="34"
  DTS:VersionGUID="{F36DF664-B521-4824-BD0F-58166ADB0AD4}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[DESKTOP-263B43H.PRACTICE]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{476DEC92-5A8A-4C46-A0FE-24496E2D4304}"
      DTS:ObjectName="DESKTOP-263B43H.PRACTICE">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=DESKTOP-263B43H;Initial Catalog=PRACTICE;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;Application Name=SSIS-Package2-{476DEC92-5A8A-4C46-A0FE-24496E2D4304}DESKTOP-263B43H.PRACTICE;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[DESKTOP-263B43H.SSISDB]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{18AB5FFB-AB34-4FD3-9927-CAC10818C90D}"
      DTS:ObjectName="DESKTOP-263B43H.SSISDB">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=DESKTOP-263B43H;Initial Catalog=SSISDB;Provider=SQLNCLI11.1;Integrated Security=SSPI;Application Name=SSIS-pkg_foreachLoop-{18AB5FFB-AB34-4FD3-9927-CAC10818C90D}DESKTOP-263B43H.SSISDB;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Excel Connection Manager]"
      DTS:CreationName="EXCEL"
      DTS:DTSID="{BA26FCC1-1869-401B-8D3B-34B37C0911D6}"
      DTS:ObjectName="Excel Connection Manager">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="0"
          DTS:ConnectRetryInterval="0"
          DTS:ConnectionString="Provider=Microsoft.ACE.OLEDB.12.0;Data Source=C:\Users\Nishi Sen\Documents\Excel File\Product.xlsx;Extended Properties=&quot;Excel 12.0 XML;HDR=YES&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Flat File Connection Manager]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{BB7A4A8F-0E3E-4A34-819B-4887649DABD8}"
      DTS:ObjectName="Flat File Connection Manager">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="C:\Users\Nishi Sen\Desktop\PYTHON MATERIAL\Bakery.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="TransactionNo"
              DTS:DTSID="{897786D3-0E4F-45AB-9AD0-1C4A7C066B96}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Items"
              DTS:DTSID="{B902AD46-FB6A-49FC-A2D6-28B44D43C659}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="DateTime"
              DTS:DTSID="{1D23002B-E270-4D0F-8D0B-998F99F1B85F}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Daypart"
              DTS:DTSID="{84B60890-994E-4AEA-8C9A-FB435607985F}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="DayType"
              DTS:DTSID="{445C419A-5EB7-420F-8C2A-DA257A8B37BD}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{7541D980-00DB-4C93-A6DD-66ACA276CEE4}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FirstName">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{6A5B8A5C-C53D-40BE-85BF-C789F54B1771}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="HighestName">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{60427B2D-30B2-44D2-9C45-86D7B4E0E700}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="HighestNumber">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E883EE28-966C-4762-B9FB-C5A34925D275}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="LastName">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E715E13E-1979-4AF6-AA1B-FAA63C1DA56E}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="Mentors">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{5248C0EF-6C26-4D1D-BC05-6AA5A07FD125}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="Proteges">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Delete any old rows from the table"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{6AFC404F-62E8-4BF9-9C1F-834C949B4BB2}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Delete any old rows from the table"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="1">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{18AB5FFB-AB34-4FD3-9927-CAC10818C90D}"
          SQLTask:SqlStatementSource="Delete from Bakery_dst" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Display the busiest Mentor Name"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{A1AF19CF-6D99-45F8-AC99-0A305B981141}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Display the busiest Mentor Name"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_3544cab4fa184682a2caf34c8b2f8b26"
          VSTAMajorVersion="16"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::HighestName,User::HighestNumber">
          <ProjectItem
            Name="ST_3544cab4fa184682a2caf34c8b2f8b26.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{a5a7f99b-bd20-4956-9def-605ae879b521}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_3544cab4fa184682a2caf34c8b2f8b26</RootNamespace>
    <AssemblyName>ST_3544cab4fa184682a2caf34c8b2f8b26</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_3544cab4fa184682a2caf34c8b2f8b26.Properties.Settings.get_Default():ST_3544cab4fa184682a2caf34c8b2f8b26.Properties.Sett" +
    "ings")]

namespace ST_3544cab4fa184682a2caf34c8b2f8b26.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
#endregion

namespace ST_3544cab4fa184682a2caf34c8b2f8b26
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            // TODO: Add your code here
            string HighestName = Convert.ToString(Dts.Variables["HighestName"].Value);
            int HighestNumber = Convert.ToInt32(Dts.Variables["HighestNumber"].Value);

            MessageBox.Show("Busiest mentor is " + HighestName +
                " with " + HighestNumber.ToString() + " proteges");





            Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_3544cab4fa184682a2caf34c8b2f8b26</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_3544cab4fa184682a2caf34c8b2f8b26</msb:DisplayName>
    <msb:ProjectId>{0FB248BC-8265-4170-8B30-6958C28AE1D0}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_3544cab4fa184682a2caf34c8b2f8b26.csproj" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_3544cab4fa184682a2caf34c8b2f8b26")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_3544cab4fa184682a2caf34c8b2f8b26")]
[assembly: AssemblyCopyright("Copyright @  2024")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_3544cab4fa184682a2caf34c8b2f8b26.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_3544cab4fa184682a2caf34c8b2f8b26.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_3544cab4fa184682a2caf34c8b2f8b26.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_3544cab4fa184682a2caf34c8b2f8b26.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_3544cab4fa184682a2caf34c8b2f8b26.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_3544cab4fa184682a2caf34c8b2f8b26.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAHd6WmcAAAAAAAAAAOAAIiALATAAABAAAAAIAAAAAAAA6i4A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAJguAABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA8A4AAAAgAAAAEAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAASAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADM
LgAAAAAAAEgAAAACAAUASCEAAJgMAAABAAAAAAAAAOAtAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwBACEAAAAAQAAEQIoEAAACm8RAAAKcgEAAHBvEgAACm8T
AAAKKBQAAAoKAigQAAAKbxEAAApyGQAAcG8SAAAKbxMAAAooFQAACgsbjRwAAAElFnI1AABwoiUX
BqIlGHJbAABwoiUZEgEoFgAACqIlGnJpAABwoigXAAAKKBgAAAomAigQAAAKFm8ZAAAKKh4CKBoA
AAoqHgIoGwAACiqufgEAAAQtHnJ9AABw0AMAAAIoHAAACm8dAAAKcx4AAAqAAQAABH4BAAAEKhp+
AgAABCoeAoACAAAEKhp+AwAABCoeAigfAAAKKi5zCAAABoADAAAEKgAAQlNKQgEAAQAAAAAADAAA
AHY0LjAuMzAzMTkAAAAABQBsAAAACAQAACN+AAB0BAAApAUAACNTdHJpbmdzAAAAABgKAADwAAAA
I1VTAAgLAAAQAAAAI0dVSUQAAAAYCwAAgAEAACNCbG9iAAAAAAAAAAIAAAFXHaIBCQMAAAD6ATMA
FgAAAQAAACIAAAAFAAAABgAAAAkAAAABAAAAHwAAAAIAAAAQAAAAAQAAAAIAAAADAAAABAAAAAEA
AAAFAAAAAQAAAAEAAAAAAH0DAQAAAAAABgAtAk0EBgC8Ak0EBgB5AToEDwDBBAAABgCmAfsDBgAQ
AvsDBgDxAfsDBgCjAvsDBgBNAvsDBgBmAvsDBgC9AfsDBgDYAeoCCgCBAiwDCgD4ACwDBgC1A64D
BgBcAToEBgBQBa4DBgAdBG0EBgANBOYDDgAsAWcDDgCNAWcDDgAUAdEDBgBBAU0ECgBVAywDEgAD
BaMAEgB2AKMABgB/Ba4DBgAGA64DBgADAK4DFgCMBRYFFgBjBRYFBgDDAK4DBgB/AK4DBgCbBfsD
AAAAAC0AAAAAAAEAAQABABAAxgMJADkAAQABAAAAEAB0BNAERQABAAMAAAEQAA0F0ARZAAMABwAD
AQAAOwUAAD0ABAAKABEAugOBABEA6ACFABEAZgCJAAYGVQCNAFaAKwWQAFaAyACQAFAgAAAAAIYA
zAMGAAEA4CAAAAAAhhgtBAYAAQDoIAAAAACDGC0EBgABAPAgAAAAAJMIGQSUAAEAHCEAAAAAkwjQ
AJkAAQAjIQAAAACTCNwAngABACshAAAAAJYIVwWkAAIAMiEAAAAAhhgtBAYAAgA6IQAAAACRGDME
qQACAAAAAQDkAgkALQQBABEALQQGABkALQQKACkALQQQADEALQQQADkALQQQAEEALQQQAEkALQQQ
AFEALQQQAFkALQQQAGEALQQQAGkALQQGAIEALQQGAKkALQQVALkALQQGAHEAMwUgAMEA/wQlAMkA
pQMqANEA2gIwANkABAM0ANkAAQA5AOkABAM+AOEASQVCAPEAhwVIAMEAcAUBAHEALQQGAIkALQQG
AAEBkQBOAAEBlwVXAJEALQRdALEALQQGAAgAFAB3AAgAGAB8ACkAcwDkAC4ACwC8AC4AEwDFAC4A
GwDkAC4AIwDtAC4AKwAWAS4AMwAWAS4AOwAWAS4AQwDtAC4ASwAcAS4AUwAWAS4AWwAzAUMAYwB8
AEkAcwDkAGEAewB8AGMAawB8ABsAAwABAAQAAwAAAB0ErQAAAPAAsgAAAFsFtwACAAQAAwACAAUA
BQABAAYABQACAAcABwAEgAAAAQAAAJgjJ1AAAAAAAAAJAAAABAAAAAAAAAAAAAAAZQBdAAAAAAAQ
AAAAAAAAAAAAAABuAA0DAAAAAAQAAAAAAAAAAAAAAGUArgMAAAAAEAAAAAAAAAAAAAAAbgA2AAAA
AAAEAAAAAAAAAAAAAABlABYFAAAAAAAAAAABAAAAfgQAAAUAAgAAAAAAAFRvSW50MzIAU1RfMzU0
NGNhYjRmYTE4NDY4MmEyY2FmMzRjOGIyZjhiMjYAPE1vZHVsZT4ATWljcm9zb2Z0LlNxbFNlcnZl
ci5NYW5hZ2VkRFRTAHZhbHVlX18AbXNjb3JsaWIAZGVmYXVsdEluc3RhbmNlAFZhcmlhYmxlAFJ1
bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRz
LlJ1bnRpbWUAVHlwZQBGYWlsdXJlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3Vs
dHVyZQBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UA
RWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJO
b25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0
dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRl
AFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUA
QXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmli
dXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBT
U0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRl
AFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAGdldF9WYWx1ZQB2YWx1ZQBTeXN0ZW0uUnVu
dGltZS5WZXJzaW9uaW5nAFRvU3RyaW5nAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBN
aWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAFNjcmlwdE9iamVjdE1vZGVs
AFN5c3RlbS5Db21wb25lbnRNb2RlbABTVF8zNTQ0Y2FiNGZhMTg0NjgyYTJjYWYzNGM4YjJmOGIy
Ni5kbGwAZ2V0X0l0ZW0AU3lzdGVtAEVudW0AcmVzb3VyY2VNYW4AU2NyaXB0TWFpbgBTeXN0ZW0u
Q29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBDdWx0
dXJlSW5mbwBnZXRfUmVzb3VyY2VNYW5hZ2VyAC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3Rp
Y3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNUXzM1
NDRjYWI0ZmExODQ2ODJhMmNhZjM0YzhiMmY4YjI2LlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291
cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTVF8zNTQ0Y2FiNGZhMTg0NjgyYTJjYWYzNGM4YjJmOGIyNi5Q
cm9wZXJ0aWVzAGdldF9WYXJpYWJsZXMAU2V0dGluZ3MAU3lzdGVtLldpbmRvd3MuRm9ybXMAU3Vj
Y2VzcwBnZXRfRHRzAFNjcmlwdFJlc3VsdHMAQ29uY2F0AE9iamVjdABnZXRfRGVmYXVsdABEaWFs
b2dSZXN1bHQAc2V0X1Rhc2tSZXN1bHQAQ29udmVydABTaG93AE1lc3NhZ2VCb3gAZ2V0X0Fzc2Vt
Ymx5AAAXSABpAGcAaABlAHMAdABOAGEAbQBlAAAbSABpAGcAaABlAHMAdABOAHUAbQBiAGUAcgAA
JUIAdQBzAGkAZQBzAHQAIABtAGUAbgB0AG8AcgAgAGkAcwAgAAANIAB3AGkAdABoACAAABMgAHAA
cgBvAHQAZQBnAGUAcwAAcVMAVABfADMANQA0ADQAYwBhAGIANABmAGEAMQA4ADQANgA4ADIAYQAy
AGMAYQBmADMANABjADgAYgAyAGYAOABiADIANgAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUA
cwBvAHUAcgBjAGUAcwAAAMHfa/9iRqFIp2lIxgZQz8gABCABAQgDIAABBSABARERBCABAQ4FIAEB
EVEEBwIOCAQgABJhBCAAEmUFIAESaRwDIAAcBAABDhwEAAEIHAMgAA4FAAEOHQ4FAAERfQ4IAAES
gIERgIUFIAASgIkHIAIBDhKAiQi3elxWGTTgiQiJhF3NgIDMkQQAAAAABAEAAAADBhJJAwYSTQMG
EhACBggDBhEUBAAAEkkEAAASTQUAAQESTQQAABIQAwAAAQQIABJJBAgAEk0ECAASEAgBAAgAAAAA
AB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU1RfMzU0NGNhYjRm
YTE4NDY4MmEyY2FmMzRjOGIyZjhiMjYAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAyNAAASQEA
Gi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC43AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVU
IEZyYW1ld29yayA0LjcAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3Vy
Y2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVi
bGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNv
dXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAwC4AAAAAAAAAAAAA2i4AAAAgAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAMwuAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8l
ACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQAnUJgjAAABACdQmCM/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAA
MAAwADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABh
AG4AeQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4A
AAAAAFMAVABfADMANQA0ADQAYwBhAGIANABmAGEAMQA4ADQANgA4ADIAYQAyAGMAYQBmADMANABj
ADgAYgAyAGYAOABiADIANgAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAA
LgA5ADEAMQAyAC4AMgAwADUAMQA5AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAA
AFMAVABfADMANQA0ADQAYwBhAGIANABmAGEAMQA4ADQANgA4ADIAYQAyAGMAYQBmADMANABjADgA
YgAyAGYAOABiADIANgAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0
AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMgA0AAAAKgABAAEATABlAGcAYQBsAFQA
cgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBu
AGEAbQBlAAAAUwBUAF8AMwA1ADQANABjAGEAYgA0AGYAYQAxADgANAA2ADgAMgBhADIAYwBhAGYA
MwA0AGMAOABiADIAZgA4AGIAMgA2AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBt
AGUAAAAAAFMAVABfADMANQA0ADQAYwBhAGIANABmAGEAMQA4ADQANgA4ADIAYQAyAGMAYQBmADMA
NABjADgAYgAyAGYAOABiADIANgAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAA
ADEALgAwAC4AOQAxADEAMgAuADIAMAA1ADEAOQAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAA
VgBlAHIAcwBpAG8AbgAAADEALgAwAC4AOQAxADEAMgAuADIAMAA1ADEAOQAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAADsPgAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Import File"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{CDE6FAB0-ECCC-4733-95ED-2ED34F784DE9}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Import File"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Import File\Bakery file csv"
              componentClassID="Microsoft.FlatFileSource"
              contactInfo="Flat File Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Flat File Source"
              localeId="1033"
              name="Bakery file csv"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Specifies whether zero-length columns are treated as null."
                  name="RetainNulls">true</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of an output column containing the file name. If no name is specified, no output column containing the file name will be generated."
                  name="FileNameColumnName"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Import File\Bakery file csv.Connections[FlatFileConnection]"
                  connectionManagerID="Package.ConnectionManagers[Flat File Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Flat File Connection Manager]"
                  name="FlatFileConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Import File\Bakery file csv.Outputs[Flat File Source Output]"
                  name="Flat File Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import File\Bakery file csv.Outputs[Flat File Source Output].Columns[TransactionNo]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import File\Bakery file csv.Outputs[Flat File Source Output].ExternalColumns[TransactionNo]"
                      length="50"
                      lineageId="Package\Import File\Bakery file csv.Outputs[Flat File Source Output].Columns[TransactionNo]"
                      name="TransactionNo"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Import File\Bakery file csv.Outputs[Flat File Source Output].Columns[Items]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import File\Bakery file csv.Outputs[Flat File Source Output].ExternalColumns[Items]"
                      length="50"
                      lineageId="Package\Import File\Bakery file csv.Outputs[Flat File Source Output].Columns[Items]"
                      name="Items"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Import File\Bakery file csv.Outputs[Flat File Source Output].Columns[DateTime]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import File\Bakery file csv.Outputs[Flat File Source Output].ExternalColumns[DateTime]"
                      length="50"
                      lineageId="Package\Import File\Bakery file csv.Outputs[Flat File Source Output].Columns[DateTime]"
                      name="DateTime"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Import File\Bakery file csv.Outputs[Flat File Source Output].Columns[Daypart]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import File\Bakery file csv.Outputs[Flat File Source Output].ExternalColumns[Daypart]"
                      length="50"
                      lineageId="Package\Import File\Bakery file csv.Outputs[Flat File Source Output].Columns[Daypart]"
                      name="Daypart"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Import File\Bakery file csv.Outputs[Flat File Source Output].Columns[DayType]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import File\Bakery file csv.Outputs[Flat File Source Output].ExternalColumns[DayType]"
                      length="50"
                      lineageId="Package\Import File\Bakery file csv.Outputs[Flat File Source Output].Columns[DayType]"
                      name="DayType"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Import File\Bakery file csv.Outputs[Flat File Source Output].ExternalColumns[TransactionNo]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="TransactionNo" />
                    <externalMetadataColumn
                      refId="Package\Import File\Bakery file csv.Outputs[Flat File Source Output].ExternalColumns[Items]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="Items" />
                    <externalMetadataColumn
                      refId="Package\Import File\Bakery file csv.Outputs[Flat File Source Output].ExternalColumns[DateTime]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="DateTime" />
                    <externalMetadataColumn
                      refId="Package\Import File\Bakery file csv.Outputs[Flat File Source Output].ExternalColumns[Daypart]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="Daypart" />
                    <externalMetadataColumn
                      refId="Package\Import File\Bakery file csv.Outputs[Flat File Source Output].ExternalColumns[DayType]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="DayType" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Import File\Bakery file csv.Outputs[Flat File Source Error Output]"
                  isErrorOut="true"
                  name="Flat File Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import File\Bakery file csv.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                      codePage="1252"
                      dataType="text"
                      description="Flat File Source Error Output Column"
                      lineageId="Package\Import File\Bakery file csv.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                      name="Flat File Source Error Output Column" />
                    <outputColumn
                      refId="Package\Import File\Bakery file csv.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Import File\Bakery file csv.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Import File\Bakery file csv.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Import File\Bakery file csv.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Import File\count by daypart MrngEve"
              componentClassID="Microsoft.Aggregate"
              contactInfo="Aggregate;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;3"
              description="Aggregates data with functions such as Average, Sum, Count, Max, and Min. For example, group data to compute the sum of sales per product or the average visits per day."
              name="count by daypart MrngEve"
              version="3">
              <properties>
                <property
                  dataType="System.Int32"
                  description="Specifies the approximate number of group by keys that the aggregation produces. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no KeyScale value is used."
                  name="KeyScale"
                  typeConverter="KeyScaleType">0</property>
                <property
                  dataType="System.Null"
                  description="Specifies the exact number of group by keys that the aggregation produces. If a KeyScale value is specified, the value in Keys takes precedence."
                  name="Keys" />
                <property
                  dataType="System.Int32"
                  description="Specifies the approximate number of distinct values in a column that the aggregation counts distinctly. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no CountDistinctScale value is used."
                  name="CountDistinctScale"
                  typeConverter="KeyScaleType">0</property>
                <property
                  dataType="System.Null"
                  description="Specifies the exact number of distinct values in a column that the aggregation counts distinctly. If a CountDistinctScale value is specified, the value in CountDistinctKeys takes precedence."
                  name="CountDistinctKeys" />
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage by which memory can be extended during the aggregation. Valid values are between 1 and 100."
                  name="AutoExtendFactor">25</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Import File\count by daypart MrngEve.Inputs[Aggregate Input 1]"
                  name="Aggregate Input 1">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Import File\count by daypart MrngEve.Inputs[Aggregate Input 1].Columns[Daypart]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Daypart"
                      lineageId="Package\Import File\Flat File Source.Outputs[Flat File Source Output].Columns[Daypart]" />
                    <inputColumn
                      refId="Package\Import File\count by daypart MrngEve.Inputs[Aggregate Input 1].Columns[Items]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Items"
                      lineageId="Package\Import File\Flat File Source.Outputs[Flat File Source Output].Columns[Items]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Import File\count by daypart MrngEve.Outputs[Aggregate Output 1]"
                  name="Aggregate Output 1">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="Specifies the approximate number of group by keys that the aggregation produces. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no KeyScale value is used."
                      name="KeyScale"
                      typeConverter="KeyScaleType">0</property>
                    <property
                      dataType="System.Null"
                      description="Specifies the exact number of group by keys that the aggregation produces. If a KeyScale value is specified, the value in Keys takes precedence."
                      name="Keys" />
                  </properties>
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import File\count by daypart MrngEve.Outputs[Aggregate Output 1].Columns[Daypart]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Import File\count by daypart MrngEve.Outputs[Aggregate Output 1].Columns[Daypart]"
                      name="Daypart">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          name="AggregationColumnId">#{Package\Import File\Flat File Source.Outputs[Flat File Source Output].Columns[Daypart]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          name="AggregationType"
                          typeConverter="AggregationType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                          name="IsBig">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the string comparison options."
                          name="AggregationComparisonFlags">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Import File\count by daypart MrngEve.Outputs[Aggregate Output 1].Columns[Count of Items]"
                      dataType="ui8"
                      lineageId="Package\Import File\count by daypart MrngEve.Outputs[Aggregate Output 1].Columns[Count of Items]"
                      name="Count of Items">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          name="AggregationColumnId">#{Package\Import File\Flat File Source.Outputs[Flat File Source Output].Columns[Items]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          name="AggregationType"
                          typeConverter="AggregationType">1</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                          name="IsBig">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the string comparison options."
                          name="AggregationComparisonFlags">0</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Import File\Flat File Source"
              componentClassID="Microsoft.FlatFileSource"
              contactInfo="Flat File Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Flat File Source"
              localeId="1033"
              name="Flat File Source"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Specifies whether zero-length columns are treated as null."
                  name="RetainNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of an output column containing the file name. If no name is specified, no output column containing the file name will be generated."
                  name="FileNameColumnName"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Import File\Flat File Source.Connections[FlatFileConnection]"
                  connectionManagerID="Package.ConnectionManagers[Flat File Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Flat File Connection Manager]"
                  name="FlatFileConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Import File\Flat File Source.Outputs[Flat File Source Output]"
                  name="Flat File Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import File\Flat File Source.Outputs[Flat File Source Output].Columns[TransactionNo]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[TransactionNo]"
                      length="50"
                      lineageId="Package\Import File\Flat File Source.Outputs[Flat File Source Output].Columns[TransactionNo]"
                      name="TransactionNo"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Import File\Flat File Source.Outputs[Flat File Source Output].Columns[Items]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Items]"
                      length="50"
                      lineageId="Package\Import File\Flat File Source.Outputs[Flat File Source Output].Columns[Items]"
                      name="Items"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Import File\Flat File Source.Outputs[Flat File Source Output].Columns[DateTime]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[DateTime]"
                      length="50"
                      lineageId="Package\Import File\Flat File Source.Outputs[Flat File Source Output].Columns[DateTime]"
                      name="DateTime"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Import File\Flat File Source.Outputs[Flat File Source Output].Columns[Daypart]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Daypart]"
                      length="50"
                      lineageId="Package\Import File\Flat File Source.Outputs[Flat File Source Output].Columns[Daypart]"
                      name="Daypart"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Import File\Flat File Source.Outputs[Flat File Source Output].Columns[DayType]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[DayType]"
                      length="50"
                      lineageId="Package\Import File\Flat File Source.Outputs[Flat File Source Output].Columns[DayType]"
                      name="DayType"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Import File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[TransactionNo]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="TransactionNo" />
                    <externalMetadataColumn
                      refId="Package\Import File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Items]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="Items" />
                    <externalMetadataColumn
                      refId="Package\Import File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[DateTime]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="DateTime" />
                    <externalMetadataColumn
                      refId="Package\Import File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Daypart]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="Daypart" />
                    <externalMetadataColumn
                      refId="Package\Import File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[DayType]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="DayType" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Import File\Flat File Source.Outputs[Flat File Source Error Output]"
                  isErrorOut="true"
                  name="Flat File Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import File\Flat File Source.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                      codePage="1252"
                      dataType="text"
                      description="Flat File Source Error Output Column"
                      lineageId="Package\Import File\Flat File Source.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                      name="Flat File Source Error Output Column" />
                    <outputColumn
                      refId="Package\Import File\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Import File\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Import File\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Import File\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Import File\OLE DB Destination"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="OLE DB Destination"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[Bakery_dst]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Import File\OLE DB Destination.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[DESKTOP-263B43H.SSISDB]"
                  connectionManagerRefId="Package.ConnectionManagers[DESKTOP-263B43H.SSISDB]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Import File\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Import File\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[TransactionNo]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="TransactionNo"
                      externalMetadataColumnId="Package\Import File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[TransactionNo]"
                      lineageId="Package\Import File\Sort.Outputs[Sort Output].Columns[TransactionNo]" />
                    <inputColumn
                      refId="Package\Import File\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Items]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Items"
                      externalMetadataColumnId="Package\Import File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Items]"
                      lineageId="Package\Import File\Sort.Outputs[Sort Output].Columns[Items]" />
                    <inputColumn
                      refId="Package\Import File\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[DateTime]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="DateTime"
                      cachedSortKeyPosition="1"
                      externalMetadataColumnId="Package\Import File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[DateTime]"
                      lineageId="Package\Import File\Sort.Outputs[Sort Output].Columns[DateTime]" />
                    <inputColumn
                      refId="Package\Import File\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Daypart]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Daypart"
                      externalMetadataColumnId="Package\Import File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Daypart]"
                      lineageId="Package\Import File\Sort.Outputs[Sort Output].Columns[Daypart]" />
                    <inputColumn
                      refId="Package\Import File\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[DayType]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="DayType"
                      externalMetadataColumnId="Package\Import File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[DayType]"
                      lineageId="Package\Import File\Sort.Outputs[Sort Output].Columns[DayType]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Import File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[TransactionNo]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="TransactionNo" />
                    <externalMetadataColumn
                      refId="Package\Import File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Items]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="Items" />
                    <externalMetadataColumn
                      refId="Package\Import File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[DateTime]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="DateTime" />
                    <externalMetadataColumn
                      refId="Package\Import File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Daypart]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="Daypart" />
                    <externalMetadataColumn
                      refId="Package\Import File\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[DayType]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="DayType" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Import File\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Import File\OLE DB Destination.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import File\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Import File\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Import File\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Import File\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Import File\Product Table"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="Product Table"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">ProductTable$</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Import File\Product Table.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Import File\Product Table.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import File\Product Table.Outputs[Excel Source Output].Columns[ProductID]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import File\Product Table.Outputs[Excel Source Output].ExternalColumns[ProductID]"
                      lineageId="Package\Import File\Product Table.Outputs[Excel Source Output].Columns[ProductID]"
                      name="ProductID"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Import File\Product Table.Outputs[Excel Source Output].Columns[ProductName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import File\Product Table.Outputs[Excel Source Output].ExternalColumns[ProductName]"
                      length="255"
                      lineageId="Package\Import File\Product Table.Outputs[Excel Source Output].Columns[ProductName]"
                      name="ProductName"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Import File\Product Table.Outputs[Excel Source Output].Columns[Category]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import File\Product Table.Outputs[Excel Source Output].ExternalColumns[Category]"
                      length="255"
                      lineageId="Package\Import File\Product Table.Outputs[Excel Source Output].Columns[Category]"
                      name="Category"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Import File\Product Table.Outputs[Excel Source Output].Columns[Price]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import File\Product Table.Outputs[Excel Source Output].ExternalColumns[Price]"
                      lineageId="Package\Import File\Product Table.Outputs[Excel Source Output].Columns[Price]"
                      name="Price"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Import File\Product Table.Outputs[Excel Source Output].ExternalColumns[ProductID]"
                      dataType="r8"
                      name="ProductID" />
                    <externalMetadataColumn
                      refId="Package\Import File\Product Table.Outputs[Excel Source Output].ExternalColumns[ProductName]"
                      dataType="wstr"
                      length="255"
                      name="ProductName" />
                    <externalMetadataColumn
                      refId="Package\Import File\Product Table.Outputs[Excel Source Output].ExternalColumns[Category]"
                      dataType="wstr"
                      length="255"
                      name="Category" />
                    <externalMetadataColumn
                      refId="Package\Import File\Product Table.Outputs[Excel Source Output].ExternalColumns[Price]"
                      dataType="r8"
                      name="Price" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Import File\Product Table.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import File\Product Table.Outputs[Excel Source Error Output].Columns[ProductID]"
                      dataType="r8"
                      lineageId="Package\Import File\Product Table.Outputs[Excel Source Error Output].Columns[ProductID]"
                      name="ProductID" />
                    <outputColumn
                      refId="Package\Import File\Product Table.Outputs[Excel Source Error Output].Columns[ProductName]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Import File\Product Table.Outputs[Excel Source Error Output].Columns[ProductName]"
                      name="ProductName" />
                    <outputColumn
                      refId="Package\Import File\Product Table.Outputs[Excel Source Error Output].Columns[Category]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Import File\Product Table.Outputs[Excel Source Error Output].Columns[Category]"
                      name="Category" />
                    <outputColumn
                      refId="Package\Import File\Product Table.Outputs[Excel Source Error Output].Columns[Price]"
                      dataType="r8"
                      lineageId="Package\Import File\Product Table.Outputs[Excel Source Error Output].Columns[Price]"
                      name="Price" />
                    <outputColumn
                      refId="Package\Import File\Product Table.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Import File\Product Table.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Import File\Product Table.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Import File\Product Table.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Import File\Sale"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="Sale"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">Saletable$</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Import File\Sale.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Import File\Sale.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import File\Sale.Outputs[Excel Source Output].Columns[SaleID]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import File\Sale.Outputs[Excel Source Output].ExternalColumns[SaleID]"
                      lineageId="Package\Import File\Sale.Outputs[Excel Source Output].Columns[SaleID]"
                      name="SaleID"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Import File\Sale.Outputs[Excel Source Output].Columns[ProductID]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import File\Sale.Outputs[Excel Source Output].ExternalColumns[ProductID]"
                      lineageId="Package\Import File\Sale.Outputs[Excel Source Output].Columns[ProductID]"
                      name="ProductID"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Import File\Sale.Outputs[Excel Source Output].Columns[SaleDate]"
                      dataType="date"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import File\Sale.Outputs[Excel Source Output].ExternalColumns[SaleDate]"
                      lineageId="Package\Import File\Sale.Outputs[Excel Source Output].Columns[SaleDate]"
                      name="SaleDate"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Import File\Sale.Outputs[Excel Source Output].Columns[Quantity]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import File\Sale.Outputs[Excel Source Output].ExternalColumns[Quantity]"
                      lineageId="Package\Import File\Sale.Outputs[Excel Source Output].Columns[Quantity]"
                      name="Quantity"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Import File\Sale.Outputs[Excel Source Output].ExternalColumns[SaleID]"
                      dataType="r8"
                      name="SaleID" />
                    <externalMetadataColumn
                      refId="Package\Import File\Sale.Outputs[Excel Source Output].ExternalColumns[ProductID]"
                      dataType="r8"
                      name="ProductID" />
                    <externalMetadataColumn
                      refId="Package\Import File\Sale.Outputs[Excel Source Output].ExternalColumns[SaleDate]"
                      dataType="date"
                      name="SaleDate" />
                    <externalMetadataColumn
                      refId="Package\Import File\Sale.Outputs[Excel Source Output].ExternalColumns[Quantity]"
                      dataType="r8"
                      name="Quantity" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Import File\Sale.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import File\Sale.Outputs[Excel Source Error Output].Columns[SaleID]"
                      dataType="r8"
                      lineageId="Package\Import File\Sale.Outputs[Excel Source Error Output].Columns[SaleID]"
                      name="SaleID" />
                    <outputColumn
                      refId="Package\Import File\Sale.Outputs[Excel Source Error Output].Columns[ProductID]"
                      dataType="r8"
                      lineageId="Package\Import File\Sale.Outputs[Excel Source Error Output].Columns[ProductID]"
                      name="ProductID" />
                    <outputColumn
                      refId="Package\Import File\Sale.Outputs[Excel Source Error Output].Columns[SaleDate]"
                      dataType="date"
                      lineageId="Package\Import File\Sale.Outputs[Excel Source Error Output].Columns[SaleDate]"
                      name="SaleDate" />
                    <outputColumn
                      refId="Package\Import File\Sale.Outputs[Excel Source Error Output].Columns[Quantity]"
                      dataType="r8"
                      lineageId="Package\Import File\Sale.Outputs[Excel Source Error Output].Columns[Quantity]"
                      name="Quantity" />
                    <outputColumn
                      refId="Package\Import File\Sale.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Import File\Sale.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Import File\Sale.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Import File\Sale.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Import File\Sort"
              componentClassID="Microsoft.Sort"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              name="Sort"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                  name="EliminateDuplicates">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify"
                  name="MaximumThreads">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Import File\Sort.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Import File\Sort.Inputs[Sort Input].Columns[TransactionNo]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="TransactionNo"
                      lineageId="Package\Import File\Bakery file csv.Outputs[Flat File Source Output].Columns[TransactionNo]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Import File\Sort.Inputs[Sort Input].Columns[Items]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Items"
                      lineageId="Package\Import File\Bakery file csv.Outputs[Flat File Source Output].Columns[Items]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Import File\Sort.Inputs[Sort Input].Columns[DateTime]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="DateTime"
                      lineageId="Package\Import File\Bakery file csv.Outputs[Flat File Source Output].Columns[DateTime]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">1</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Import File\Sort.Inputs[Sort Input].Columns[Daypart]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Daypart"
                      lineageId="Package\Import File\Bakery file csv.Outputs[Flat File Source Output].Columns[Daypart]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Import File\Sort.Inputs[Sort Input].Columns[DayType]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="DayType"
                      lineageId="Package\Import File\Bakery file csv.Outputs[Flat File Source Output].Columns[DayType]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Import File\Sort.Outputs[Sort Output]"
                  isSorted="true"
                  name="Sort Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import File\Sort.Outputs[Sort Output].Columns[TransactionNo]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Import File\Sort.Outputs[Sort Output].Columns[TransactionNo]"
                      name="TransactionNo">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Import File\Bakery file csv.Outputs[Flat File Source Output].Columns[TransactionNo]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Import File\Sort.Outputs[Sort Output].Columns[Items]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Import File\Sort.Outputs[Sort Output].Columns[Items]"
                      name="Items">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Import File\Bakery file csv.Outputs[Flat File Source Output].Columns[Items]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Import File\Sort.Outputs[Sort Output].Columns[DateTime]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Import File\Sort.Outputs[Sort Output].Columns[DateTime]"
                      name="DateTime"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Import File\Bakery file csv.Outputs[Flat File Source Output].Columns[DateTime]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Import File\Sort.Outputs[Sort Output].Columns[Daypart]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Import File\Sort.Outputs[Sort Output].Columns[Daypart]"
                      name="Daypart">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Import File\Bakery file csv.Outputs[Flat File Source Output].Columns[Daypart]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Import File\Sort.Outputs[Sort Output].Columns[DayType]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Import File\Sort.Outputs[Sort Output].Columns[DayType]"
                      name="DayType">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Import File\Bakery file csv.Outputs[Flat File Source Output].Columns[DayType]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Import File\Union All"
              componentClassID="Microsoft.UnionAll"
              contactInfo="Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation."
              name="Union All"
              version="1">
              <inputs>
                <input
                  refId="Package\Import File\Union All.Inputs[Union All Input 1]"
                  name="Union All Input 1">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Import File\Union All.Inputs[Union All Input 1].Columns[Daypart]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Daypart"
                      lineageId="Package\Import File\count by daypart MrngEve.Outputs[Aggregate Output 1].Columns[Daypart]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Import File\Union All.Outputs[Union All Output 1].Columns[Daypart]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Import File\Union All.Inputs[Union All Input 1].Columns[Count of Items]"
                      cachedDataType="ui8"
                      cachedName="Count of Items"
                      lineageId="Package\Import File\count by daypart MrngEve.Outputs[Aggregate Output 1].Columns[Count of Items]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Import File\Union All.Outputs[Union All Output 1].Columns[Count of Items]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Import File\Union All.Inputs[Union All Input 2]"
                  dangling="true"
                  hasSideEffects="true"
                  name="Union All Input 2">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Import File\Union All.Outputs[Union All Output 1]"
                  name="Union All Output 1">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import File\Union All.Outputs[Union All Output 1].Columns[Daypart]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Import File\Union All.Outputs[Union All Output 1].Columns[Daypart]"
                      name="Daypart" />
                    <outputColumn
                      refId="Package\Import File\Union All.Outputs[Union All Output 1].Columns[Count of Items]"
                      dataType="ui8"
                      lineageId="Package\Import File\Union All.Outputs[Union All Output 1].Columns[Count of Items]"
                      name="Count of Items" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Import File\Union All 1"
              componentClassID="Microsoft.UnionAll"
              contactInfo="Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation."
              name="Union All 1"
              version="1">
              <inputs>
                <input
                  refId="Package\Import File\Union All 1.Inputs[Union All Input 1]"
                  name="Union All Input 1">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Import File\Union All 1.Inputs[Union All Input 1].Columns[ProductID]"
                      cachedDataType="r8"
                      cachedName="ProductID"
                      lineageId="Package\Import File\Product Table.Outputs[Excel Source Output].Columns[ProductID]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Import File\Union All 1.Outputs[Union All Output 1].Columns[ProductID]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Import File\Union All 1.Inputs[Union All Input 1].Columns[ProductName]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="ProductName"
                      lineageId="Package\Import File\Product Table.Outputs[Excel Source Output].Columns[ProductName]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Import File\Union All 1.Outputs[Union All Output 1].Columns[ProductName]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Import File\Union All 1.Inputs[Union All Input 1].Columns[Category]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Category"
                      lineageId="Package\Import File\Product Table.Outputs[Excel Source Output].Columns[Category]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Import File\Union All 1.Outputs[Union All Output 1].Columns[Category]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Import File\Union All 1.Inputs[Union All Input 1].Columns[Price]"
                      cachedDataType="r8"
                      cachedName="Price"
                      lineageId="Package\Import File\Product Table.Outputs[Excel Source Output].Columns[Price]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Import File\Union All 1.Outputs[Union All Output 1].Columns[Price]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Import File\Union All 1.Inputs[Union All Input 2]"
                  hasSideEffects="true"
                  name="Union All Input 2">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Import File\Union All 1.Inputs[Union All Input 2].Columns[ProductID]"
                      cachedDataType="r8"
                      cachedName="ProductID"
                      lineageId="Package\Import File\Sale.Outputs[Excel Source Output].Columns[ProductID]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Import File\Union All 1.Outputs[Union All Output 1].Columns[ProductID]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Import File\Union All 1.Inputs[Union All Input 3]"
                  dangling="true"
                  hasSideEffects="true"
                  name="Union All Input 3">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Import File\Union All 1.Outputs[Union All Output 1]"
                  name="Union All Output 1">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import File\Union All 1.Outputs[Union All Output 1].Columns[ProductID]"
                      dataType="r8"
                      lineageId="Package\Import File\Union All 1.Outputs[Union All Output 1].Columns[ProductID]"
                      name="ProductID" />
                    <outputColumn
                      refId="Package\Import File\Union All 1.Outputs[Union All Output 1].Columns[ProductName]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Import File\Union All 1.Outputs[Union All Output 1].Columns[ProductName]"
                      name="ProductName" />
                    <outputColumn
                      refId="Package\Import File\Union All 1.Outputs[Union All Output 1].Columns[Category]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Import File\Union All 1.Outputs[Union All Output 1].Columns[Category]"
                      name="Category" />
                    <outputColumn
                      refId="Package\Import File\Union All 1.Outputs[Union All Output 1].Columns[Price]"
                      dataType="r8"
                      lineageId="Package\Import File\Union All 1.Outputs[Union All Output 1].Columns[Price]"
                      name="Price" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Import File.Paths[Aggregate Output 1]"
              endId="Package\Import File\Union All.Inputs[Union All Input 1]"
              name="Aggregate Output 1"
              startId="Package\Import File\count by daypart MrngEve.Outputs[Aggregate Output 1]" />
            <path
              refId="Package\Import File.Paths[Excel Source Output]"
              endId="Package\Import File\Union All 1.Inputs[Union All Input 1]"
              name="Excel Source Output"
              startId="Package\Import File\Product Table.Outputs[Excel Source Output]" />
            <path
              refId="Package\Import File.Paths[Excel Source Output1]"
              endId="Package\Import File\Union All 1.Inputs[Union All Input 2]"
              name="Excel Source Output"
              startId="Package\Import File\Sale.Outputs[Excel Source Output]" />
            <path
              refId="Package\Import File.Paths[Flat File Source Output]"
              endId="Package\Import File\Sort.Inputs[Sort Input]"
              name="Flat File Source Output"
              startId="Package\Import File\Bakery file csv.Outputs[Flat File Source Output]" />
            <path
              refId="Package\Import File.Paths[Flat File Source Output1]"
              endId="Package\Import File\count by daypart MrngEve.Inputs[Aggregate Input 1]"
              name="Flat File Source Output"
              startId="Package\Import File\Flat File Source.Outputs[Flat File Source Output]" />
            <path
              refId="Package\Import File.Paths[Sort Output]"
              endId="Package\Import File\OLE DB Destination.Inputs[OLE DB Destination Input]"
              name="Sort Output"
              startId="Package\Import File\Sort.Outputs[Sort Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Load Mentor into a variable"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{BF34392A-97F3-4C06-9FDC-6726EEF5DFF5}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Load Mentor into a variable"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{476DEC92-5A8A-4C46-A0FE-24496E2D4304}"
          SQLTask:SqlStatementSource="Select FirstName, LastName, Proteges from MentorNumbers"
          SQLTask:ResultType="ResultSetType_Rowset" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ResultBinding
            SQLTask:ResultName="0"
            SQLTask:DtsVariableName="User::Mentors" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Loop Over  Mentors"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach Loop Container"
      DTS:DTSID="{361DF589-473B-4B03-BE74-C6E6D3F17DBE}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Loop Over  Mentors">
      <DTS:ForEachEnumerator
        DTS:CreationName="Microsoft.ForEachADOEnumerator"
        DTS:DTSID="{0FE33D15-7573-45AC-920F-7705E7AF30C9}"
        DTS:ObjectName="{0FE33D15-7573-45AC-920F-7705E7AF30C9}">
        <DTS:ObjectData>
          <FEEADO
            EnumType="EnumerateRowsInFirstTable"
            VarName="User::Mentors" />
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Loop Over  Mentors\Check highest number Proteges"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{92E66A44-50CB-4BB2-B4EA-72EE65BD81D6}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Check highest number Proteges"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_7495fa87c3f7485b845c118d8525d973"
              VSTAMajorVersion="16"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::FirstName,User::LastName,User::Proteges"
              ReadWriteVariables="User::HighestName,User::HighestNumber">
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_7495fa87c3f7485b845c118d8525d973.Properties.Settings.get_Default():ST_7495fa87c3f7485b845c118d8525d973.Properties.Sett" +
    "ings")]

namespace ST_7495fa87c3f7485b845c118d8525d973.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ST_7495fa87c3f7485b845c118d8525d973.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{8965833D-439B-49D6-8D59-3E7EC270E872}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_7495fa87c3f7485b845c118d8525d973</RootNamespace>
    <AssemblyName>ST_7495fa87c3f7485b845c118d8525d973</AssemblyName>
    <TargetFrameworkVersion>v4.7.2</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
#endregion

namespace ST_7495fa87c3f7485b845c118d8525d973
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            // TODO: Add your code here
            string FirstName = Convert.ToString(Dts.Variables["FirstName"].Value);
            string LastName = Convert.ToString(Dts.Variables["LastName"].Value);
            int Proteges = Convert.ToInt32(Dts.Variables["Proteges"].Value);

            int HighestNumber = Convert.ToInt32(Dts.Variables["HighestNumber"].Value);
            string HighestName = FirstName + " " + LastName;

            if (Proteges > HighestNumber)
            {
                //set new highest number
                Dts.Variables["HighestNumber"].Value = Proteges;
                Dts.Variables["HighestName"].Value = FirstName + " " + LastName;
                HighestNumber = Convert.ToInt32(Dts.Variables["HighestNumber"].Value);
                HighestName = FirstName + " " + LastName;
            }




                Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:Language>msBuild</msb:Language>
    <msb:CodeName>ST_7495fa87c3f7485b845c118d8525d973</msb:CodeName>
    <msb:DisplayName>ST_7495fa87c3f7485b845c118d8525d973</msb:DisplayName>
    <msb:ProjectId>{D8A7CA17-9889-4ECF-84AE-A86B3424CD08}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_7495fa87c3f7485b845c118d8525d973.csproj" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_7495fa87c3f7485b845c118d8525d973")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_7495fa87c3f7485b845c118d8525d973")]
[assembly: AssemblyCopyright("Copyright @  2024")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_7495fa87c3f7485b845c118d8525d973.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_7495fa87c3f7485b845c118d8525d973.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_7495fa87c3f7485b845c118d8525d973.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_7495fa87c3f7485b845c118d8525d973.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_7495fa87c3f7485b845c118d8525d973.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_7495fa87c3f7485b845c118d8525d973.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAN53WmcAAAAAAAAAAOAAIiALATAAABAAAAAIAAAAAAAAGi8A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAMguAABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAIA8AAAAgAAAAEAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAASAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAD8
LgAAAAAAAEgAAAACAAUA1CEAADwMAAABAAAAAAAAABAuAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwBAARAQAAAQAAEQIoEAAACm8RAAAKcgEAAHBvEgAACm8T
AAAKKBQAAAoKAigQAAAKbxEAAApyFQAAcG8SAAAKbxMAAAooFAAACgsCKBAAAApvEQAACnInAABw
bxIAAApvEwAACigVAAAKDAIoEAAACm8RAAAKcjkAAHBvEgAACm8TAAAKKBUAAAoNBnJVAABwBygW
AAAKJggJMXMCKBAAAApvEQAACnI5AABwbxIAAAoIjB0AAAFvFwAACgIoEAAACm8RAAAKclkAAHBv
EgAACgZyVQAAcAcoFgAACm8XAAAKAigQAAAKbxEAAApyOQAAcG8SAAAKbxMAAAooFQAACg0GclUA
AHAHKBYAAAomAigQAAAKFm8YAAAKKh4CKBkAAAoqHgIoGgAACiqufgEAAAQtHnJxAABw0AMAAAIo
GwAACm8cAAAKcx0AAAqAAQAABH4BAAAEKhp+AgAABCoeAoACAAAEKhp+AwAABCoeAigeAAAKKi5z
CAAABoADAAAEKgBCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAADgAwAAI34AAEwE
AAB8BQAAI1N0cmluZ3MAAAAAyAkAAOQAAAAjVVMArAoAABAAAAAjR1VJRAAAALwKAACAAQAAI0Js
b2IAAAAAAAAAAgAAAVcdogEJAwAAAPoBMwAWAAABAAAAIAAAAAUAAAAGAAAACQAAAAEAAAAeAAAA
AgAAABAAAAABAAAAAgAAAAMAAAAEAAAAAQAAAAQAAAABAAAAAQAAAAAAhwMBAAAAAAAGAC0CVwQG
ALwCVwQGAHkBRAQPAMsEAAAGAKYBBQQGABACBQQGAPEBBQQGAKMCBQQGAE0CBQQGAGYCBQQGAL0B
BQQGANgB9AIKAIECNgMKAPgANgMGAL8DuAMGAFwBRAQGAEUFuAMGACcEdwQGABcE8AMOACwBcQMO
AI0BcQMOABQB2wMGAEEBVwQKAF8DNgMSAA0FowASAHYAowAGAGcFuAMGABADuAMGAAMAuAMGAMMA
uAMGAH8AuAMGAHMFBQQAAAAALQAAAAAAAQABAAEAEADQAwkAOQABAAEAAAAQAH4E2gRFAAEAAwAA
ARAAFwXaBFkAAwAHAAMBAAAwBQAAPQAEAAoAEQDEA30AEQDoAIEAEQBmAIUABgZVAIkAVoAgBYwA
VoDIAIwAUCAAAAAAhgDWAwYAAQBtIQAAAACGGDcEBgABAHUhAAAAAIMYNwQGAAEAfSEAAAAAkwgj
BJAAAQCpIQAAAACTCNAAlQABALAhAAAAAJMI3ACaAAEAuCEAAAAAlghMBaAAAgC/IQAAAACGGDcE
BgACAMchAAAAAJEYPQSlAAIAAAABAO4CCQA3BAEAEQA3BAYAGQA3BAoAKQA3BBAAMQA3BBAAOQA3
BBAAQQA3BBAASQA3BBAAUQA3BBAAWQA3BBAAYQA3BBAAaQA3BAYAgQA3BAYAqQA3BBUAuQA3BAYA
cQAoBSIAwQAJBScAyQCvAywA0QDaAjIA2QAOAzYA2QABADsA4QA+BUAA0QDkAkcAwQBYBQEAcQA3
BAYAiQA3BAYA8QCRAEwA8QBvBVMAkQA3BFkAsQA3BAYACAAUAHMACAAYAHgAKQBzAOAALgALALgA
LgATAMEALgAbAOAALgAjAOkALgArABIBLgAzABIBLgA7ABIBLgBDAOkALgBLABgBLgBTABIBLgBb
AC8BQwBjAHgASQBzAOAAYQB7AHgAYwBrAHgAGwADAAEABAADAAAAJwSpAAAA8ACuAAAAUAWzAAIA
BAADAAIABQAFAAEABgAFAAIABwAHAASAAAABAAAAmCPbTgAAAAAAAAkAAAAEAAAAAAAAAAAAAABh
AF0AAAAAABAAAAAAAAAAAAAAAGoAFwMAAAAABAAAAAAAAAAAAAAAYQC4AwAAAAAQAAAAAAAAAAAA
AABqADYAAAAAAAAAAAABAAAAiAQAAAUAAgAAAABUb0ludDMyAFNUXzc0OTVmYTg3YzNmNzQ4NWI4
NDVjMTE4ZDg1MjVkOTczADxNb2R1bGU+AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwB2
YWx1ZV9fAG1zY29ybGliAGRlZmF1bHRJbnN0YW5jZQBWYXJpYWJsZQBSdW50aW1lVHlwZUhhbmRs
ZQBHZXRUeXBlRnJvbUhhbmRsZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lAFR5cGUA
RmFpbHVyZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAVlNUQVJUU2Ny
aXB0T2JqZWN0TW9kZWxCYXNlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAEVkaXRvckJyb3dzYWJs
ZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRy
aWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1i
bHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdv
cmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3Jp
cHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVBy
b2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdFRhc2tF
bnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0
aWJpbGl0eUF0dHJpYnV0ZQBnZXRfVmFsdWUAc2V0X1ZhbHVlAHZhbHVlAFN5c3RlbS5SdW50aW1l
LlZlcnNpb25pbmcAVG9TdHJpbmcATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jv
c29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sAU2NyaXB0T2JqZWN0TW9kZWwAU3lz
dGVtLkNvbXBvbmVudE1vZGVsAFNUXzc0OTVmYTg3YzNmNzQ4NWI4NDVjMTE4ZDg1MjVkOTczLmRs
bABnZXRfSXRlbQBTeXN0ZW0ARW51bQByZXNvdXJjZU1hbgBTY3JpcHRNYWluAFN5c3RlbS5Db25m
aWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAEN1bHR1cmVJ
bmZvAGdldF9SZXNvdXJjZU1hbmFnZXIALmN0b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBT
eXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU1RfNzQ5NWZh
ODdjM2Y3NDg1Yjg0NWMxMThkODUyNWQ5NzMuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2Vz
AERlYnVnZ2luZ01vZGVzAFNUXzc0OTVmYTg3YzNmNzQ4NWI4NDVjMTE4ZDg1MjVkOTczLlByb3Bl
cnRpZXMAZ2V0X1ZhcmlhYmxlcwBTZXR0aW5ncwBTdWNjZXNzAGdldF9EdHMAU2NyaXB0UmVzdWx0
cwBDb25jYXQAT2JqZWN0AGdldF9EZWZhdWx0AHNldF9UYXNrUmVzdWx0AENvbnZlcnQAZ2V0X0Fz
c2VtYmx5AAATRgBpAHIAcwB0AE4AYQBtAGUAABFMAGEAcwB0AE4AYQBtAGUAABFQAHIAbwB0AGUA
ZwBlAHMAABtIAGkAZwBoAGUAcwB0AE4AdQBtAGIAZQByAAADIAAAF0gAaQBnAGgAZQBzAHQATgBh
AG0AZQAAcVMAVABfADcANAA5ADUAZgBhADgANwBjADMAZgA3ADQAOAA1AGIAOAA0ADUAYwAxADEA
OABkADgANQAyADUAZAA5ADcAMwAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBj
AGUAcwAAAOQCbwT20b9PvBTVW82oWyEABCABAQgDIAABBSABARERBCABAQ4FIAEBEVEGBwQODggI
BCAAEmEEIAASZQUgARJpHAMgABwEAAEOHAQAAQgcBgADDg4ODgQgAQEcBgABEnkRfQUgABKAgQcg
AgEOEoCBCLd6XFYZNOCJCImEXc2AgMyRBAAAAAAEAQAAAAMGEkkDBhJNAwYSEAIGCAMGERQEAAAS
SQQAABJNBQABARJNBAAAEhADAAABBAgAEkkECAASTQQIABIQCAEACAAAAAAAHgEAAQBUAhZXcmFw
Tm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTVF83NDk1ZmE4N2MzZjc0ODViODQ1YzEx
OGQ4NTI1ZDk3MwAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDI0AABNAQAcLk5FVEZyYW1ld29y
ayxWZXJzaW9uPXY0LjcuMgEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUULk5FVCBGcmFtZXdvcmsg
NC43LjIAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIs
IG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9r
ZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIA
AAAAAAAAAAAAAFBBRFBBRFC0AAAA8C4AAAAAAAAAAAAACi8AAAAgAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAPwuAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQDbTpgjAAABANtOmCM/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAA
MAAwADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABh
AG4AeQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4A
AAAAAFMAVABfADcANAA5ADUAZgBhADgANwBjADMAZgA3ADQAOAA1AGIAOAA0ADUAYwAxADEAOABk
ADgANQAyADUAZAA5ADcAMwAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAA
LgA5ADEAMQAyAC4AMgAwADEAOAA3AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAA
AFMAVABfADcANAA5ADUAZgBhADgANwBjADMAZgA3ADQAOAA1AGIAOAA0ADUAYwAxADEAOABkADgA
NQAyADUAZAA5ADcAMwAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0
AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMgA0AAAAKgABAAEATABlAGcAYQBsAFQA
cgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBu
AGEAbQBlAAAAUwBUAF8ANwA0ADkANQBmAGEAOAA3AGMAMwBmADcANAA4ADUAYgA4ADQANQBjADEA
MQA4AGQAOAA1ADIANQBkADkANwAzAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBt
AGUAAAAAAFMAVABfADcANAA5ADUAZgBhADgANwBjADMAZgA3ADQAOAA1AGIAOAA0ADUAYwAxADEA
OABkADgANQAyADUAZAA5ADcAMwAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAA
ADEALgAwAC4AOQAxADEAMgAuADIAMAAxADgANwAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAA
VgBlAHIAcwBpAG8AbgAAADEALgAwAC4AOQAxADEAMgAuADIAMAAxADgANwAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAAAcPwAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{01881AC5-2898-4F97-BF7E-74BEEB1662CF}"
          DTS:ObjectName="{01881AC5-2898-4F97-BF7E-74BEEB1662CF}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::FirstName" />
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{D1F12519-D008-4765-AA6A-4831AE513B56}"
          DTS:ObjectName="{D1F12519-D008-4765-AA6A-4831AE513B56}"
          DTS:ValueIndex="1"
          DTS:VariableName="User::LastName" />
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{E1A02D34-2CE9-4FD4-BAE7-409E06FE293F}"
          DTS:ObjectName="{E1A02D34-2CE9-4FD4-BAE7-409E06FE293F}"
          DTS:ValueIndex="2"
          DTS:VariableName="User::Proteges" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{418D21AC-3648-4E7E-B5C0-BF6FF1526625}"
      DTS:From="Package\Load Mentor into a variable"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Loop Over  Mentors" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{C7B7D4DA-DDE8-4271-9508-9A4EC6B044AA}"
      DTS:From="Package\Loop Over  Mentors"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Display the busiest Mentor Name" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{F9D63073-D0CE-422D-B02D-D3752B47C753}"
      DTS:From="Package\Delete any old rows from the table"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\Import File" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="214.666666666667,74.6666666666667"
          Id="Package\Load Mentor into a variable"
          TopLeft="19.5,5.50000000000004" />
        <NodeLayout
          Size="232,42.6666666666667"
          Id="Package\Loop Over  Mentors\Check highest number Proteges"
          TopLeft="5.5,5.50000000000004" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="242.666666666667,103.333333333334"
          Size="242.666666666667,146"
          Id="Package\Loop Over  Mentors"
          TopLeft="5.50000000000004,140.166666666667" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="126.833333333333,80.1666666666667">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="236,42.6666666666667"
          Id="Package\Display the busiest Mentor Name"
          TopLeft="8.83333333333343,354.833333333333" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="126.833333333333,286.166666666667">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,68.6666666666667"
              Start="0,0"
              End="0,61.1666666666667">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,61.1666666666667" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <AnnotationLayout
          Text="l"
          ParentId="Package"
          FontInfo="{assembly:Null}"
          Size="32,60"
          Id="dbf69e99-a625-4cc8-86cf-e985ba618755"
          TopLeft="305.833333333333,346.166666666667" />
        <NodeLayout
          Size="130.666666666667,42.6666666666667"
          Id="Package\Import File"
          TopLeft="398.5,354.833333333333" />
        <NodeLayout
          Size="241.333333333334,42.6666666666667"
          Id="Package\Delete any old rows from the table"
          TopLeft="343.166666666667,191.833333333333" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="463.833333333333,234.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,120.333333333333"
              Start="0,0"
              End="0,112.833333333333">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,112.833333333333" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Import File">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="148,42.6666666666667"
          Id="Package\Import File\Bakery file csv"
          TopLeft="18.8333333333334,5.50000000000004" />
        <NodeLayout
          Size="174.666666666667,42.6666666666667"
          Id="Package\Import File\OLE DB Destination"
          TopLeft="5.50000000000004,233.5" />
        <NodeLayout
          Size="98.6666666666667,42.6666666666667"
          Id="Package\Import File\Sort"
          TopLeft="43.5,108.166666666667" />
        <EdgeLayout
          Id="Package\Import File.Paths[Flat File Source Output]"
          TopLeft="92.8333333333334,48.1666666666667">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60.0000000000001"
              Start="0,0"
              End="0,52.5000000000001">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5000000000001" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Import File.Paths[Sort Output]"
          TopLeft="92.8333333333334,150.833333333333">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,82.6666666666667"
              Start="0,0"
              End="0,75.1666666666667">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,75.1666666666667" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="204,42.6666666666667"
          Id="Package\Import File\count by daypart MrngEve"
          TopLeft="202.833333333333,108.166666666667" />
        <NodeLayout
          Size="154.666666666667,42.6666666666667"
          Id="Package\Import File\Flat File Source"
          TopLeft="227.5,5.49999999999993" />
        <EdgeLayout
          Id="Package\Import File.Paths[Flat File Source Output1]"
          TopLeft="304.833333333333,48.1666666666666">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60.0000000000001"
              Start="0,0"
              End="0,52.5000000000001">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5000000000001" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="122.666666666667,42.6666666666667"
          Id="Package\Import File\Union All"
          TopLeft="243.5,233.5" />
        <EdgeLayout
          Id="Package\Import File.Paths[Aggregate Output 1]"
          TopLeft="304.833333333333,150.833333333333">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,82.6666666666667"
              Start="0,0"
              End="0,75.1666666666667">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,75.1666666666667" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,29.5833333333333,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <AnnotationLayout
          Text="Data Viewr simply used to &#xD;&#xA;montior the data&#xD;&#xA; &#xD;&#xA;"
          ParentId="Package\Import File"
          FontInfo="{assembly:Null}"
          Size="167.333333333334,88"
          Id="2815e0d1-65eb-4cc0-9c6f-11014da4e9c2"
          TopLeft="427.166666666667,210.833333333333" />
        <NodeLayout
          Size="146.666666666667,42.6666666666667"
          Id="Package\Import File\Product Table"
          TopLeft="467.5,108.166666666667" />
        <NodeLayout
          Size="100.666666666667,42.6666666666667"
          Id="Package\Import File\Sale"
          TopLeft="674.5,108.166666666667" />
        <NodeLayout
          Size="131.333333333334,42.6666666666667"
          Id="Package\Import File\Union All 1"
          TopLeft="655.166666666667,233.5" />
        <EdgeLayout
          Id="Package\Import File.Paths[Excel Source Output]"
          TopLeft="540.833333333333,150.833333333333">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="159.444444444444,82.6666666666667"
              Start="0,0"
              End="159.444444444444,75.1666666666667">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,45.0030090270812" />
                  <mssgle:CubicBezierSegment
                    Point1="0,45.0030090270812"
                    Point2="0,49.0030090270812"
                    Point3="4,49.0030090270812" />
                  <mssgle:LineSegment
                    End="155.444444444444,49.0030090270812" />
                  <mssgle:CubicBezierSegment
                    Point1="155.444444444444,49.0030090270812"
                    Point2="159.444444444444,49.0030090270812"
                    Point3="159.444444444444,53.0030090270812" />
                  <mssgle:LineSegment
                    End="159.444444444444,75.1666666666667" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Import File.Paths[Excel Source Output1]"
          TopLeft="724.833333333333,150.833333333333">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="16.5555555555555,82.6666666666667"
              Start="0,0"
              End="16.5555555555555,75.1666666666667">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,45.0030090270812" />
                  <mssgle:CubicBezierSegment
                    Point1="0,45.0030090270812"
                    Point2="0,49.0030090270812"
                    Point3="4,49.0030090270812" />
                  <mssgle:LineSegment
                    End="12.5555555555555,49.0030090270812" />
                  <mssgle:CubicBezierSegment
                    Point1="12.5555555555555,49.0030090270812"
                    Point2="16.5555555555555,49.0030090270812"
                    Point3="16.5555555555555,53.0030090270812" />
                  <mssgle:LineSegment
                    End="16.5555555555555,75.1666666666667" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <AnnotationLayout
          Text="llll"
          ParentId="Package\Import File"
          FontInfo="{assembly:Null}"
          Size="40,60"
          Id="178e0eca-d6a1-4086-92e9-318e32ef43b6"
          TopLeft="5.5,916.842095196413" />
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Import File\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Import File\Product Table">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Import File\Sale">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>